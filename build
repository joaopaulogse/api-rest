#!/usr/bin/env node
const { exec } = require('child_process')
const program = require("commander");
program
    .version(require('./package.json').version)
    .option('-p, --production', 'Build de produção')
    .option('-d, --development', 'Build de desenvolvimento')
    .option('-t, --test', 'Roda os testes')
    .parse(process.argv);

if(program.production){
    exec('cp .env.example .env')
    const npm = exec('yarn run production')
    npm.stdout.on('data', data=>{
        console.log(data.toString())
    })
    npm.stderr.on('data', data=>{
        console.log(data.toString())
    })
    npm.on('close', code=>{
        process.exit(1)
        console.log(code.toString())
    })

}
if(program.development){
    exec('cp .env.example .env')
    const npm = exec('yarn run dev')
    npm.stdout.on('data', data=>{
        console.log(data.toString())
    })
    npm.stderr.on('data', data=>{
        console.log(data.toString())
    })
    npm.on('close', code=>{
        console.log(code.toString())
    })
}
if(program.test){
    //copia as varias que voce quer para serem executadas
    exec('cp .env.example .env')
    const npm = exec('yarn run test-integration-jest')
    npm.stdout.on('data', data=>{
        console.log(data.toString())
    })
    npm.stderr.on('data', data=>{
        console.log(data.toString())
    })
    npm.on('close', code=>{
        console.log(code.toString())
    })
    
}